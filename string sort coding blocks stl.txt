//algorithm:how below comp function works?
//It returns true if elements need not to be swap else return false.
//you can think like that this works like bubble sort if(a[i]>a[i+1]) then swap else not swap

#include<bits/stdc++.h>
using namespace std;
bool comp(string a,string b){
	int n1=a.length();
	int n2=b.length();
	if(n1<n2){
		string s(b.begin(),b.begin()+n1);
		if(s==a){
			return false;
		}
		return a<b;
	}
	else if(n2<n1){
		string s(a.begin(),a.begin()+n2);
		if(s==b){
			return true;
		}
		return a<b;
	}
	return a<b; 
}
int main() {
	int n;
	cin>>n;
	vector<string> v(n);
    for(int i=0;i<n;i++)
    cin>>v[i];
	sort(v.begin(),v.end(),comp);
	for(int i=0;i<n;i++){
		cout<<v[i]<<endl;
	}
	return 0;
}