Trie is an efficient information retrieval data structure. Use this data structure to store Strings and search strings. Your task is to use TRIE data structure and search the given string A. If found print 1 else 0.


.....
...........Trie................Time Complexity 0(length of String) ................space complexity 0(26+26*26+26*26*26+.....+upto n length)=(26^n)
#include <bits/stdc++.h>
using namespace std;
struct Node{
    int a[26];
    Node *next[26];
    Node(){
        for(int i=0;i<26;i++){
            a[i]=0;
            next[i]=NULL;
        }
    }
};
void insert(Node *root,string S){
    for(int i=0;i<S.length();i++){
        if(root->next[S[i]-'a']==NULL){
            root->next[S[i]-'a']=new Node();
        }
        if(i==S.length()-1){
            root->a[i]++;
        }
        root=root->next[S[i]-'a'];
    }
}
int Search(Node *root,string S){
    for(int i=0;i<S.length();i++){
        if(root->next[S[i]-'a']==NULL){
            return false;
        }
        if(i==S.length()-1){
            if(root->a[i]==1){
                return 1;
            }
            else{
                return 0;
            }
        }
        root=root->next[S[i]-'a'];
    }
    return true;
}

int main() {
	//code
	int t;
	cin>>t;
	while(t--){
	    int n;
	    cin>>n;
	    string s;
	    Node *root=new Node();
	    for(int i=0;i<n;i++){
	        cin>>s;
	        insert(root,s);
	    }
	    cin>>s;
	    cout<<Search(root,s)<<endl;
	}
	return 0;
}